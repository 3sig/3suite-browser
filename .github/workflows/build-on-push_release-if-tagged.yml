name: create executables
run-name: build for commit "${{ github.event.head_commit.message }}" (${{ github.sha }})
on: [push]
permissions:
  contents: write
jobs:
  build:
    name: build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: npm run make -- --platform win32 --arch x64
      - run: npm run make
      - run: mv out/make/zip/darwin/arm64/*.zip ${{ github.event.repository.name }}_${{ env.COMMIT_SHORT_SHA }}_osx-arm.zip
      - run: mv out/make/zip/win32/x64/*.zip ${{ github.event.repository.name }}_${{ env.COMMIT_SHORT_SHA }}_win.zip
      - name: Upload windows-executable
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}_${{ env.COMMIT_SHORT_SHA }}_win.zip
          path: ${{ github.event.repository.name }}_${{ env.COMMIT_SHORT_SHA }}_win.zip
      - name: Upload macos-arm executable
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}_${{ env.COMMIT_SHORT_SHA }}_osx-arm.zip
          path: ${{ github.event.repository.name }}_${{ env.COMMIT_SHORT_SHA }}_osx-arm.zip
      - name: Upload config file
        uses: actions/upload-artifact@v4
        with:
          name: config.toml
          path: config.toml
      - run: mv ${{ github.event.repository.name }}_${{ env.COMMIT_SHORT_SHA }}_osx-arm.zip ${{ github.event.repository.name }}_${{ github.ref_name }}_osx-arm.zip
        if: startsWith(github.ref, 'refs/tags/')
      - run: mv ${{ github.event.repository.name }}_${{ env.COMMIT_SHORT_SHA }}_win.zip ${{ github.event.repository.name }}_${{ github.ref_name }}_win.zip
        if: startsWith(github.ref, 'refs/tags/')
      - run: |
          tagAnnotationMessage=$(git for-each-ref refs/tags/${{  github.ref_name }} --format='%(contents)')
          echo "TAG_ANNOTATION_MESSAGE=$tagAnnotationMessage" >> $GITHUB_ENV
        if: startsWith(github.ref, 'refs/tags/')
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: ${{ env.TAG_ANNOTATION_MESSAGE }}
          files: |
            ${{ github.event.repository.name }}_${{  github.ref_name }}_osx-arm.zip
            ${{ github.event.repository.name }}_${{  github.ref_name }}_win.zip
            config.toml
